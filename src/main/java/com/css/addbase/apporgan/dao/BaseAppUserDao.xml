<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.css.addbase.apporgan.dao.BaseAppUserDao">

	<select id="queryObject" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		select * from BASE_APP_USER where ID = #{value}
	</select>

	<select id="queryList" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		select * from BASE_APP_USER WHERE 1= 1 and ISDELETE = '0'
		<if test="organid != null">
		    and ORGANID = #{organid}
		</if>
		<if test="mobile != null and mobile != ''">
		    and mobile = #{mobile}
		</if>
		<if test="userId != null">
		    and USER_ID = #{userId}
		</if>
		<if test="trueName != null">
		    and TRUENAME = #{trueName}
		</if>
		<if test="userIds !=null and userIds.length >0">
			and USER_ID in
			<foreach item="userIds" collection="array" open="(" separator="," close=")">
				#{userIds}
			</foreach>
		</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
		order by sort
	</select>
	<select id="selectUserByNameAndUnitId" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		select * from BASE_APP_USER where ISDELETE = 0 and truename=#{0} and organid in (
		select ID from BASE_APP_ORGAN start with  id=#{1} and ISDELETE=0 connect by prior id=parent_Id)
	</select>

	<!--<select id="selectCount" resultType="com.css.addbase.apporgan.entity.BaseAppUser">-->
		<!--select count(t.organId) count,b.id organid,b.name organName from BASE_APP_USER t right join-->
		<!--(select  * from BASE_APP_ORGAN start with id= #{orgId} connect by prior id = parent_id) b-->
		<!--on t.organId=b.id  where t.account not in('admin', 'sysadmin', 'secadmin', 'audadmin')  and t.organId not in-->
		<!--( select DEPT_ID from CONFIG_USER_DEPT where DEPT_ID is not null ) and t.USER_ID not in-->
		<!--( select USER_ID from CONFIG_USER_DEPT where USER_ID is not null ) and-->
		<!--( user_id not in ( select LEADER_ID from USER_LEADER_ACCESS_STATE where state=1 )-->
		<!--or user_id = #{userId} or user_id in (-->
		<!--select LEADER_ID from USER_LEADER_ACCESS_STATE where state=1 and user_id =#{userId} )-->
		<!--) group by b.id,b.name-->
	<!--</select>-->

    <select id="selectCountDept" resultType="com.css.addbase.apporgan.entity.BaseAppOrgan">
        select * from BASE_APP_ORGAN start with id= #{orgId} connect by prior id = parent_id
    </select>

	<select id="selectCountUser" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		select a.*, b.name as organName, (select state from USER_LEAVE_SETTING c WHERE a.user_id = c.user_id and state =1) as count,d.user_type user_type,e.isdelete eisdelete,e.stateName
        from BASE_APP_USER a right join (select  * from BASE_APP_ORGAN start with id= #{orgId} connect by prior id = parent_id) b
		on a.organId=b.id left join USER_MANAGER_SETTING d on a.user_id = d.user_id
        left join (select b.name as stateName,* from REIGN_USER as a left join REIGN_STATE as b on a.state_id = b.id) e on a.user_id=e.user_id
        where a.account not in('admin', 'sysadmin', 'secadmin', 'audadmin') and b.ID =a.ORGANID
		and a.ORGANID not in ( select DEPT_ID from CONFIG_USER_DEPT where DEPT_ID is not null ) and a.USER_ID not in
        ( select USER_ID from CONFIG_USER_DEPT where USER_ID is not null ) and ( a.user_id not in
		(  select LEADER_ID from USER_LEADER_ACCESS_STATE where state=1 ) or a.user_id = #{userId} or a.user_id in
		(  select LEADER_ID from USER_LEADER_ACCESS_STATE where state=1 and user_id =#{userId} ) ) order by a.SORT
	</select>

	<select id="queryListBySet" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		select u.* from BASE_APP_USER u inner join DOCUMENT_BANJIAN_TREE_SET s
		on u.user_id=s.user_id where u.ISDELETE=0
		<if test="organid != null">
		    and u.ORGANID = #{organid}
		</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
		order by u.sort
	</select>

 	<select id="queryTotal" resultType="int">
		<!--select count(*) from BASE_APP_USER where ISDELETE=0-->
		<!--<if test="departmentId != null and departmentId != null">-->
			<!--and ORGANID = #{departmentId}-->
		<!--</if>-->
		select count(*) from BASE_APP_USER where
		ORGANID in
		(
			select
			ID
			from
			BASE_APP_ORGAN start
			with ID         = #{departmentId}
			and ISDELETE=0 connect by prior ID = PARENT_ID
		)
		and ORGANID not in (select ifnull(dept_id,0) from config_user_dept cud)
		and user_id not in (select ifnull(user_id,0) from config_user_dept cud)
	</select>

	<select id="queryReignUsers" resultType="com.css.addbase.apporgan.entity.ReiOnlineUser">
		select us.id id,us.USER_ID USER_ID,us.ORGANID BUREAU_ID,us.TRUENAME USER_NAME,org.id OORDERID,org.NAME ORG_NAME,'' POST,us.TELEPHONE PHONE,us.MOBILE TEL
		from BASE_APP_USER us left join BASE_APP_ORGAN org on us.ORGANID = org.id  where
		ORGANID in
		(
		select
		ID
		from
		BASE_APP_ORGAN start
		with ID         = #{departmentId}
		and ISDELETE=0 connect by prior ID = PARENT_ID
		)
		and ORGANID not in (select ifnull(dept_id,0) from config_user_dept cud)
		and user_id not in (select ifnull(user_id,0) from config_user_dept cud)
		<if test="organid != null and organid != ''">
			and us.ORGANID in
			(
			select
			ID
			from
			BASE_APP_ORGAN start
			with ID         = #{organid}
			and ISDELETE=0 connect by prior ID = PARENT_ID
			)
		</if>
		<if test="accounts !=null and accounts != ''">
			and account in
			<foreach item="item" collection="accounts" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		order by OORDERID,BUREAU_ID
	</select>

 	<select id="getNotAtConfigUserDept" resultType="java.lang.String">
		select
		account
		from base_app_user bau
		where
		bau.account in
		<foreach item="id" collection="list" open="(" separator="," close=")">
			#{id}
		</foreach>
		and bau.user_id not in (select ifnull(user_id,0) from config_user_dept cud)
		and bau.ORGANID  not in (select ifnull(dept_id,0) from config_user_dept cud)
	</select>

	<select id="queryObjectByUserIds" resultType="com.css.addbase.apporgan.entity.ReiOnlineUser" >
		select  *  from BASE_APP_USER where USER_ID in
		<foreach item="userIds" collection="array" open="(" separator="," close=")">
			#{userIds}
		</foreach>
	</select>

	<select id="queryUserByName" parameterType="java.lang.String" resultType="com.css.addbase.apporgan.entity.BaseAppUser" >
		select  *  from BASE_APP_USER where TRUENAME=#{name}
	</select>

	<select id="queryObjectByDeptIds" resultType="com.css.addbase.apporgan.entity.BaseAppUser" >
		select  *  from BASE_APP_USER where ISDELETE=0 and ORGANID in
		<foreach item="deptIds" collection="array" open="(" separator="," close=")">
			#{deptIds}
		</foreach>
	</select>

	<select id="queryContactList" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		<if test="askType != null">
		 select *  from  BASE_APP_USER  where 1=1
        	and USER_ID in (
                select
                        top 0, 3
                        CHECK_USER_ID
                from
                        DOCUMENT_CHECK_MANUSCRIPT
                group by
                        CHECK_USER_ID
                order by
                        count(*) desc
      		 )
      	</if>
      	<if test="checkType != null">
      	 select *  from  BASE_APP_USER  where 1=1
        	and USER_ID in (
                select
                        top 0, 3
                        AUDIT_USER_ID
                from
                        DOCUMENT_AUDIT
                group by
                        AUDIT_USER_ID
                order by
                        count(*) desc
      		 )
      	</if>
   		<if test="signType != null">
      	 select *  from  BASE_APP_USER  where 1=1
        	and USER_ID in (
                select
                        top 0, 3
                        REVIEWER_ID
                from
                        DOCUMENT_REVIEW_STAMP
                group by
                        REVIEWER_ID
                order by
                        count(*) desc
      		 )
      	</if>
   	</select>

	<insert id="save" parameterType="com.css.addbase.apporgan.entity.BaseAppUser">
		insert into BASE_APP_USER
		(
			"ID",
			"USER_ID",
			"ISDELETE",
			"TIMESTAMP",
			"SORT",
			"TRUENAME",
			"TYPE",
			"ORGANID",
			"ACCOUNT",
			"MOBILE",
			"USEREMAIL",
			"SECLEVEL",
			"SEX",
			"TELEPHONE"
		)
		values
		(
			#{id},
			#{userId},
			#{isdelete},
			#{timestamp},
			#{sort},
			#{truename},
			#{type},
			#{organid},
			#{account},
			#{mobile},
			#{useremail},
			#{seclevel},
			#{sex},
			#{telephone}
		)
	</insert>

	<update id="update" parameterType="com.css.addbase.apporgan.entity.BaseAppUser">
		update BASE_APP_USER
		<set>
			<if test="userId != null">"USER_ID" = #{userId}, </if>
			<if test="isdelete != null">"ISDELETE" = #{isdelete}, </if>
			<if test="timestamp != null">"TIMESTAMP" = #{timestamp}, </if>
			<if test="sort != null">"SORT" = #{sort}, </if>
			<if test="truename != null">"TRUENAME" = #{truename}, </if>
			<if test="type != null">"TYPE" = #{type}, </if>
			<if test="organid != null">"ORGANID" = #{organid}, </if>
			<if test="account != null">"ACCOUNT" = #{account}, </if>
			<if test="mobile != null">"MOBILE" = #{mobile}, </if>
			<if test="useremail != null">"USEREMAIL" = #{useremail}, </if>
			<if test="seclevel != null">"SECLEVEL" = #{seclevel}, </if>
			<if test="sex != null">"SEX" = #{sex}, </if>
			<if test="telephone != null">"TELEPHONE" = #{telephone}</if>
		</set>
		where ID = #{id}
	</update>

	<delete id="delete">
		delete from BASE_APP_USER where ID = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from BASE_APP_USER where ID in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="queryObjectByAccounts" resultType="com.css.addbase.apporgan.entity.BaseAppUser" >
		select  *  from BASE_APP_USER where account in
		<foreach item="account" collection="array" open="(" separator="," close=")">
			#{account}
		</foreach>

	</select>

	<select id="queryByOrganidTREEPATH" resultType="com.css.addbase.apporgan.entity.BaseAppUser">
		select * from BASE_APP_USER where ISDELETE = 0  and  ORGANID  != 'root'
		<if test="departmentId != null and departmentId != null">
			and ORGANID in(
			select
			id
			from
			BASE_APP_ORGAN
			where
			TREE_PATH like '%'||#{departmentId}||'%'
			<if test="orgId == 'rootC'">
				and TREE_PATH not like '%rootCPBM%'
			</if>
			and isdelete = 0
			)
		</if>

	</select>

</mapper>